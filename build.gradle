plugins {
	id 'java-library'
	id 'org.springframework.boot' version '3.2.0'
	id 'io.spring.dependency-management' version '1.1.4'
	id 'maven-publish'
}

group = 'com.pragma'
version = '1.0.0'
sourceCompatibility = '17'

repositories {
	mavenCentral()
}

dependencies {
	api 'org.springframework.boot:spring-boot-starter-webflux'
	api 'org.springframework.boot:spring-boot-starter-validation'
	api 'org.springframework.boot:spring-boot-starter-aop'

	api 'org.aspectj:aspectjweaver:1.9.20.1'
	api 'org.aspectj:aspectjrt:1.9.20.1'

	compileOnly 'org.projectlombok:lombok'
	annotationProcessor 'org.projectlombok:lombok'

	api 'org.slf4j:slf4j-api'

	testImplementation 'org.springframework.boot:spring-boot-starter-test'
	testImplementation 'io.projectreactor:reactor-test'
}

java {
	withSourcesJar()
	withJavadocJar()
}

publishing {
	publications {
		mavenJava(MavenPublication) {
			from components.java
			groupId = 'com.pragma'
			artifactId = 'core-library'
			version = '1.0.0'

			versionMapping {
				usage('java-api') {
					fromResolutionOf('runtimeClasspath')
				}
				usage('java-runtime') {
					fromResolutionResult()
				}
			}
		}
	}
	repositories {
		maven {
			name = "GitHubPackages"
			url = uri("https://maven.pkg.github.com/MaicolAADev/pragma-core_library") // tu repo de GitHub
			credentials {
				username = project.findProperty("gpr.user") ?: System.getenv("GITHUB_ACTOR")
				password = project.findProperty("gpr.token") ?: System.getenv("GITHUB_TOKEN")
			}
		}
	}
}

tasks.named('test') {
	useJUnitPlatform()
}
